{
	"info": {
		"_postman_id": "a0f27888-2a4f-4253-999d-f6a56497e9a9",
		"name": "Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9136991"
	},
	"item": [
		{
			"name": "GetUserList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the status code for get users\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"email\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"gender\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"status\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"name\",\r",
							"        \"email\",\r",
							"        \"gender\",\r",
							"        \"status\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"\r",
							"};\r",
							"\r",
							"var actualResponse = pm.response.json();\r",
							"\r",
							"pm.test('Verification of response schema ', function () {\r",
							"    pm.expect(tv4.validate(actualResponse, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://gorest.co.in/public/v2/users",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var gender = [\"male\",\"female\"]\r",
							"var status = [\"active\",\"inactive\"]\r",
							"pm.variables.set(\"gender\",gender[_.random(gender.length-1)])\r",
							"pm.variables.set(\"status\",status[_.random(status.length-1)])"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the status code for create user\", function () {\r",
							"          pm.response.to.have.status(201);\r",
							"});\r",
							" var requestSchema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"email\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"gender\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"status\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"name\",\r",
							"    \"email\",\r",
							"    \"gender\",\r",
							"    \"status\"\r",
							"  ]\r",
							"};\r",
							"var actualRequest = JSON.parse(pm.request.body.raw)\r",
							"\r",
							"pm.test('Verification of request schema', function () {\r",
							"    pm.expect(tv4.validate(actualRequest, requestSchema)).to.be.true;\r",
							"});\r",
							"\r",
							"var responseSchema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"email\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"gender\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"status\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"name\",\r",
							"    \"email\",\r",
							"    \"gender\",\r",
							"    \"status\"\r",
							"  ]\r",
							"\r",
							"};\r",
							" var errorSchema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"field\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"message\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"field\",\r",
							"        \"message\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"};\r",
							"\r",
							"var actualResponse = pm.response.json();\r",
							"\r",
							"pm.test('Verification of response schema', function () {\r",
							" if( pm.response.code == \"201\"){\r",
							"  pm.expect(tv4.validate(actualResponse, responseSchema)).to.be.true;\r",
							"  }else{\r",
							"       pm.expect(tv4.validate(actualResponse, errorSchema)).to.be.true;\r",
							"  }\r",
							"    \r",
							"   \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "2e27a65a886cc440ed23a708e0c307307b5af54f2b910cb18d0e4a240e4afa54",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"id\": \"{{$randomInt}}\",\r\n        \"name\": \"{{$randomFirstName}}\",\r\n        \"email\": \"{{$randomEmail}}\",\r\n        \"gender\": \"{{gender}}\",\r\n        \"status\": \"{{status}}\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		}
	]
}